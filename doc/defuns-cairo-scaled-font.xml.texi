
@c %start of fragment

@deffn Function cairo-scaled-font-create ( @var{font-face}   @code{<cairo-font-face-t>} ) ( @var{font-matrix}   @code{<cairo-matrix-t>} ) ( @var{ctm}   @code{<cairo-matrix-t>} ) ( @var{options}   @code{<cairo-font-options-t>} )   @result{} ( @var{ret}   @code{<cairo-scaled-font-t>} )
Creates a @code{<cairo-scaled-font-t>} object from a font face and matrices that
describe the size of the font and the environment in which it will be used.

@table @var
@item font-face
a @code{<cairo-font-face-t>}

@item font-matrix
font space to user space transformation matrix for the font. In the simplest
case of a N point font, this matrix is just a scale by N, but it can also be
used to shear the font or stretch it unequally along the two axes. See
@code{cairo-set-font-matrix}.

@item ctm
user to device transformation matrix with which the font will be used.

@item options
options to use when getting metrics for the font and rendering with it.

@item ret
a newly created @code{<cairo-scaled-font-t>}. Destroy with
@code{cairo-scaled-font-destroy}

@end table

This documentation was automatically generated.

@end deffn

@deffn Function cairo-scaled-font-extents ( @var{scaled-font}   @code{<cairo-scaled-font-t>} ) ( @var{extents}   @code{<cairo-font-extents-t>} )
Gets the metrics for a @code{<cairo-scaled-font-t>}.

@table @var
@item scaled-font
a @code{<cairo-scaled-font-t>}

@item extents
a @code{<cairo-font-extents-t>} which to store the retrieved extents.

@end table

This documentation was automatically generated.

@end deffn

@deffn Function cairo-scaled-font-text-extents ( @var{scaled-font}   @code{<cairo-scaled-font-t>} ) ( @var{utf8}   @code{<char>} ) ( @var{extents}   @code{<cairo-text-extents-t>} )
Gets the extents for a string of text. The extents describe a user-space
rectangle that encloses the "inked" portion of the text drawn at the origin
(0,0) (as it would be drawn by @code{cairo-show-text} if the cairo graphics
state were set to the same font_face, font_matrix, ctm, and font_options as
@var{scaled-font}). Additionally, the x_advance and y_advance values indicate
the amount by which the current point would be advanced by
@code{cairo-show-text}.

Note that whitespace characters do not directly contribute to the size of the
rectangle (extents.width and extents.height). They do contribute indirectly by
changing the position of non-whitespace characters. In particular, trailing
whitespace characters are likely to not affect the size of the rectangle, though
they will affect the x_advance and y_advance values.

@table @var
@item scaled-font
a @code{<cairo-scaled-font-t>}

@item utf8
a string of text, encoded in UTF-8

@item extents
a @code{<cairo-text-extents-t>} which to store the retrieved extents.

@end table

Since 1.2

This documentation was automatically generated.

@end deffn

@deffn Function cairo-scaled-font-glyph-extents ( @var{scaled-font}   @code{<cairo-scaled-font-t>} ) ( @var{glyphs}   @code{<cairo-glyph-t>} ) ( @var{num-glyphs}   @code{<int>} ) ( @var{extents}   @code{<cairo-text-extents-t>} )
Gets the extents for an array of glyphs. The extents describe a user-space
rectangle that encloses the "inked" portion of the glyphs, (as they would be
drawn by @code{cairo-show-glyphs} if the cairo graphics state were set to the
same font_face, font_matrix, ctm, and font_options as @var{scaled-font}).
Additionally, the x_advance and y_advance values indicate the amount by which
the current point would be advanced by cairo_show_glyphs.

Note that whitespace glyphs do not contribute to the size of the rectangle
(extents.width and extents.height).

@table @var
@item scaled-font
a @code{<cairo-scaled-font-t>}

@item glyphs
an array of glyph IDs with X and Y offsets.

@item num-glyphs
the number of glyphs in the @var{glyphs} array

@item extents
a @code{<cairo-text-extents-t>} which to store the retrieved extents.

@end table

This documentation was automatically generated.

@end deffn

@deffn Function cairo-scaled-font-get-font-face ( @var{scaled-font}   @code{<cairo-scaled-font-t>} )   @result{} ( @var{ret}   @code{<cairo-font-face-t>} )
Gets the font face that this scaled font was created for.

@table @var
@item scaled-font
a @code{<cairo-scaled-font-t>}

@item ret
The @code{<cairo-font-face-t>} with which @var{scaled-font} was created.

@end table

Since 1.2

This documentation was automatically generated.

@end deffn

@deffn Function cairo-scaled-font-get-font-options ( @var{scaled-font}   @code{<cairo-scaled-font-t>} ) ( @var{options}   @code{<cairo-font-options-t>} )
Stores the font options with which @var{scaled-font} was created into
@var{options}.

@table @var
@item scaled-font
a @code{<cairo-scaled-font-t>}

@item options
return value for the font options

@end table

Since 1.2

This documentation was automatically generated.

@end deffn

@deffn Function cairo-scaled-font-get-font-matrix ( @var{scaled-font}   @code{<cairo-scaled-font-t>} ) ( @var{font-matrix}   @code{<cairo-matrix-t>} )
Stores the font matrix with which @var{scaled-font} was created into
@var{matrix}.

@table @var
@item scaled-font
a @code{<cairo-scaled-font-t>}

@item font-matrix
return value for the matrix

@end table

Since 1.2

This documentation was automatically generated.

@end deffn

@deffn Function cairo-scaled-font-get-ctm ( @var{scaled-font}   @code{<cairo-scaled-font-t>} ) ( @var{ctm}   @code{<cairo-matrix-t>} )
Stores the CTM with which @var{scaled-font} was created into @var{ctm}.

@table @var
@item scaled-font
a @code{<cairo-scaled-font-t>}

@item ctm
return value for the CTM

@end table

Since 1.2

This documentation was automatically generated.

@end deffn

@deffn Function cairo-scaled-font-get-type ( @var{scaled-font}   @code{<cairo-scaled-font-t>} )   @result{} ( @var{ret}   @code{<cairo-font-type-t>} )
This function returns the type of the backend used to create a scaled font. See
@code{<cairo-font-type-t>} for available types.

@table @var
@item scaled-font
a @code{<cairo-scaled-font-t>}

@item ret
The type of @var{scaled-font}.

@end table

Since 1.2

This documentation was automatically generated.

@end deffn


@c %end of fragment
