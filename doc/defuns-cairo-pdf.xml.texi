
@c %start of fragment

@deffn Function cairo-pdf-surface-create  (@var{filename}@tie{}@code{<char>}) (@var{width-in-points}@tie{}@code{<double>}) (@var{height-in-points}@tie{}@code{<double>}) @result{}@tie{} (@var{ret}@tie{}@code{<cairo-surface-t>})
Creates a PDF surface of the specified size in points to be written to
@var{filename}.

@table @var
@item filename
a filename for the PDF output (must be writable)

@item width-in-points
width of the surface, in points (1 point == 1/72.0 inch)

@item height-in-points
height of the surface, in points (1 point == 1/72.0 inch)

@item ret
a pointer to the newly created surface. The caller owns the surface and should
call cairo_surface_destroy when done with it. This function always returns a
valid pointer, but it will return a pointer to a "nil" surface if an error such
as out of memory occurs. You can use @code{cairo-surface-status} to check for
this.

@end table

Since 1.2

@end deffn

@deffn Function cairo-pdf-surface-set-size  (@var{surface}@tie{}@code{<cairo-surface-t>}) (@var{width-in-points}@tie{}@code{<double>}) (@var{height-in-points}@tie{}@code{<double>})
Changes the size of a PDF surface for the current (and subsequent) pages.

This function should only be called before any drawing operations have been
performed on the current page. The simplest way to do this is to call this
function immediately after creating the surface or immediately after completing
a page with either @code{cairo-show-page} or @code{cairo-copy-page}.

@table @var
@item surface
a PDF cairo_surface_t

@item width-in-points
new surface width, in points (1 point == 1/72.0 inch)

@item height-in-points
new surface height, in points (1 point == 1/72.0 inch)

@end table

Since 1.2

@end deffn


@c %end of fragment
